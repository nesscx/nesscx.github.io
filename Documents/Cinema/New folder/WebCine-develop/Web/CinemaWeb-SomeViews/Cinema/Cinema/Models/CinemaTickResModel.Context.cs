//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cinema.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CinemaTickResEntities : DbContext
    {
        public CinemaTickResEntities()
            : base("name=CinemaTickResEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Actor> Actors { get; set; }
        public virtual DbSet<Cinema> Cinemas { get; set; }
        public virtual DbSet<Cinema_Listing> Cinema_Listing { get; set; }
        public virtual DbSet<Cinema_Room> Cinema_Room { get; set; }
        public virtual DbSet<Cinema_Room_Type> Cinema_Room_Type { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<CreditCard> CreditCards { get; set; }
        public virtual DbSet<CreditCard_Type> CreditCard_Type { get; set; }
        public virtual DbSet<Director> Directors { get; set; }
        public virtual DbSet<Email> Emails { get; set; }
        public virtual DbSet<Film_Classification> Film_Classification { get; set; }
        public virtual DbSet<Genre> Genres { get; set; }
        public virtual DbSet<Movie> Movies { get; set; }
        public virtual DbSet<Phone> Phones { get; set; }
        public virtual DbSet<Phone_Type> Phone_Type { get; set; }
        public virtual DbSet<Province> Provinces { get; set; }
        public virtual DbSet<Purchase> Purchases { get; set; }
        public virtual DbSet<Reserve> Reserves { get; set; }
        public virtual DbSet<TUser> TUsers { get; set; }
        public virtual DbSet<User_Type> User_Type { get; set; }
    
        public virtual int BestSellers_Movies(ObjectParameter uRLS, ObjectParameter name)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BestSellers_Movies", uRLS, name);
        }
    
        public virtual int BuyTickets(Nullable<int> userid, Nullable<byte> roomrow, Nullable<byte> seating, Nullable<int> cinemalistingid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var roomrowParameter = roomrow.HasValue ?
                new ObjectParameter("roomrow", roomrow) :
                new ObjectParameter("roomrow", typeof(byte));
    
            var seatingParameter = seating.HasValue ?
                new ObjectParameter("seating", seating) :
                new ObjectParameter("seating", typeof(byte));
    
            var cinemalistingidParameter = cinemalistingid.HasValue ?
                new ObjectParameter("cinemalistingid", cinemalistingid) :
                new ObjectParameter("cinemalistingid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BuyTickets", useridParameter, roomrowParameter, seatingParameter, cinemalistingidParameter);
        }
    
        public virtual int CambioPass(string iD, string nuevoPass, string viejoPass)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var nuevoPassParameter = nuevoPass != null ?
                new ObjectParameter("NuevoPass", nuevoPass) :
                new ObjectParameter("NuevoPass", typeof(string));
    
            var viejoPassParameter = viejoPass != null ?
                new ObjectParameter("ViejoPass", viejoPass) :
                new ObjectParameter("ViejoPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambioPass", iDParameter, nuevoPassParameter, viejoPassParameter);
        }
    
        public virtual int Change_Email(string new_mail, string confirmation_mail)
        {
            var new_mailParameter = new_mail != null ?
                new ObjectParameter("New_mail", new_mail) :
                new ObjectParameter("New_mail", typeof(string));
    
            var confirmation_mailParameter = confirmation_mail != null ?
                new ObjectParameter("Confirmation_mail", confirmation_mail) :
                new ObjectParameter("Confirmation_mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Change_Email", new_mailParameter, confirmation_mailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CheckUserName(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckUserName", userNameParameter);
        }
    
        public virtual int Create_Cinema_Room(Nullable<byte> roomrows, Nullable<byte> seating, Nullable<bool> booking, Nullable<int> cinemaroomtypeid, string cinemaname, string provinceid)
        {
            var roomrowsParameter = roomrows.HasValue ?
                new ObjectParameter("Roomrows", roomrows) :
                new ObjectParameter("Roomrows", typeof(byte));
    
            var seatingParameter = seating.HasValue ?
                new ObjectParameter("seating", seating) :
                new ObjectParameter("seating", typeof(byte));
    
            var bookingParameter = booking.HasValue ?
                new ObjectParameter("booking", booking) :
                new ObjectParameter("booking", typeof(bool));
    
            var cinemaroomtypeidParameter = cinemaroomtypeid.HasValue ?
                new ObjectParameter("cinemaroomtypeid", cinemaroomtypeid) :
                new ObjectParameter("cinemaroomtypeid", typeof(int));
    
            var cinemanameParameter = cinemaname != null ?
                new ObjectParameter("cinemaname", cinemaname) :
                new ObjectParameter("cinemaname", typeof(string));
    
            var provinceidParameter = provinceid != null ?
                new ObjectParameter("provinceid", provinceid) :
                new ObjectParameter("provinceid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_Cinema_Room", roomrowsParameter, seatingParameter, bookingParameter, cinemaroomtypeidParameter, cinemanameParameter, provinceidParameter);
        }
    
        public virtual int Create_Movie(string movie_Sypnosis, string movie_title, Nullable<System.DateTime> movie_Date, Nullable<System.TimeSpan> movie_Duration, string movie_Classification, string movie_URL)
        {
            var movie_SypnosisParameter = movie_Sypnosis != null ?
                new ObjectParameter("Movie_Sypnosis", movie_Sypnosis) :
                new ObjectParameter("Movie_Sypnosis", typeof(string));
    
            var movie_titleParameter = movie_title != null ?
                new ObjectParameter("Movie_title", movie_title) :
                new ObjectParameter("Movie_title", typeof(string));
    
            var movie_DateParameter = movie_Date.HasValue ?
                new ObjectParameter("Movie_Date", movie_Date) :
                new ObjectParameter("Movie_Date", typeof(System.DateTime));
    
            var movie_DurationParameter = movie_Duration.HasValue ?
                new ObjectParameter("Movie_Duration", movie_Duration) :
                new ObjectParameter("Movie_Duration", typeof(System.TimeSpan));
    
            var movie_ClassificationParameter = movie_Classification != null ?
                new ObjectParameter("Movie_Classification", movie_Classification) :
                new ObjectParameter("Movie_Classification", typeof(string));
    
            var movie_URLParameter = movie_URL != null ?
                new ObjectParameter("Movie_URL", movie_URL) :
                new ObjectParameter("Movie_URL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_Movie", movie_SypnosisParameter, movie_titleParameter, movie_DateParameter, movie_DurationParameter, movie_ClassificationParameter, movie_URLParameter);
        }
    
        public virtual int CreateSesion(Nullable<int> cinemaListingID, Nullable<System.DateTime> day, Nullable<System.TimeSpan> startTime, Nullable<System.TimeSpan> endingTime, Nullable<int> cinemaRoomID, Nullable<int> movieID)
        {
            var cinemaListingIDParameter = cinemaListingID.HasValue ?
                new ObjectParameter("CinemaListingID", cinemaListingID) :
                new ObjectParameter("CinemaListingID", typeof(int));
    
            var dayParameter = day.HasValue ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(System.DateTime));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.TimeSpan));
    
            var endingTimeParameter = endingTime.HasValue ?
                new ObjectParameter("EndingTime", endingTime) :
                new ObjectParameter("EndingTime", typeof(System.TimeSpan));
    
            var cinemaRoomIDParameter = cinemaRoomID.HasValue ?
                new ObjectParameter("CinemaRoomID", cinemaRoomID) :
                new ObjectParameter("CinemaRoomID", typeof(int));
    
            var movieIDParameter = movieID.HasValue ?
                new ObjectParameter("MovieID", movieID) :
                new ObjectParameter("MovieID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateSesion", cinemaListingIDParameter, dayParameter, startTimeParameter, endingTimeParameter, cinemaRoomIDParameter, movieIDParameter);
        }
    
        public virtual int Delete_Cinema_Room(Nullable<int> cinemaroomid)
        {
            var cinemaroomidParameter = cinemaroomid.HasValue ?
                new ObjectParameter("cinemaroomid", cinemaroomid) :
                new ObjectParameter("cinemaroomid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Cinema_Room", cinemaroomidParameter);
        }
    
        public virtual int Delete_Movie(Nullable<int> movieID)
        {
            var movieIDParameter = movieID.HasValue ?
                new ObjectParameter("MovieID", movieID) :
                new ObjectParameter("MovieID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Movie", movieIDParameter);
        }
    
        public virtual int Delete_Sesion(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Sesion", iDParameter);
        }
    
        public virtual int DeleteCreditCard(Nullable<int> userid, string creditcardnumber)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var creditcardnumberParameter = creditcardnumber != null ?
                new ObjectParameter("creditcardnumber", creditcardnumber) :
                new ObjectParameter("creditcardnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCreditCard", useridParameter, creditcardnumberParameter);
        }
    
        public virtual int Login(string user, string password, ObjectParameter useraccess)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Login", userParameter, passwordParameter, useraccess);
        }
    
        public virtual int ModificarSesion(Nullable<int> cinemaListingID, Nullable<System.DateTime> day, Nullable<System.TimeSpan> startTime, Nullable<System.TimeSpan> endingTime, Nullable<int> cinemaRoomID, Nullable<int> movieID)
        {
            var cinemaListingIDParameter = cinemaListingID.HasValue ?
                new ObjectParameter("CinemaListingID", cinemaListingID) :
                new ObjectParameter("CinemaListingID", typeof(int));
    
            var dayParameter = day.HasValue ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(System.DateTime));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.TimeSpan));
    
            var endingTimeParameter = endingTime.HasValue ?
                new ObjectParameter("EndingTime", endingTime) :
                new ObjectParameter("EndingTime", typeof(System.TimeSpan));
    
            var cinemaRoomIDParameter = cinemaRoomID.HasValue ?
                new ObjectParameter("CinemaRoomID", cinemaRoomID) :
                new ObjectParameter("CinemaRoomID", typeof(int));
    
            var movieIDParameter = movieID.HasValue ?
                new ObjectParameter("MovieID", movieID) :
                new ObjectParameter("MovieID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarSesion", cinemaListingIDParameter, dayParameter, startTimeParameter, endingTimeParameter, cinemaRoomIDParameter, movieIDParameter);
        }
    
        public virtual int Modify_Cinema_Room(Nullable<byte> roomrows, Nullable<byte> seating, Nullable<bool> booking, Nullable<int> cinemaroomtypeid, Nullable<int> cinema_roomid)
        {
            var roomrowsParameter = roomrows.HasValue ?
                new ObjectParameter("Roomrows", roomrows) :
                new ObjectParameter("Roomrows", typeof(byte));
    
            var seatingParameter = seating.HasValue ?
                new ObjectParameter("seating", seating) :
                new ObjectParameter("seating", typeof(byte));
    
            var bookingParameter = booking.HasValue ?
                new ObjectParameter("booking", booking) :
                new ObjectParameter("booking", typeof(bool));
    
            var cinemaroomtypeidParameter = cinemaroomtypeid.HasValue ?
                new ObjectParameter("cinemaroomtypeid", cinemaroomtypeid) :
                new ObjectParameter("cinemaroomtypeid", typeof(int));
    
            var cinema_roomidParameter = cinema_roomid.HasValue ?
                new ObjectParameter("Cinema_roomid", cinema_roomid) :
                new ObjectParameter("Cinema_roomid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Modify_Cinema_Room", roomrowsParameter, seatingParameter, bookingParameter, cinemaroomtypeidParameter, cinema_roomidParameter);
        }
    
        public virtual ObjectResult<Movie_Listing_Result> Movie_Listing(ObjectParameter day, ObjectParameter startTime, ObjectParameter endingTime, ObjectParameter cinemaRoomID)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Movie_Listing_Result>("Movie_Listing", day, startTime, endingTime, cinemaRoomID);
        }
    
        public virtual int Movie_Modified(string movie_Sypnosis, string movie_title, Nullable<System.DateTime> movie_Date, Nullable<System.TimeSpan> movie_Duration, string movie_Classification, string movie_URL, Nullable<int> movieID)
        {
            var movie_SypnosisParameter = movie_Sypnosis != null ?
                new ObjectParameter("Movie_Sypnosis", movie_Sypnosis) :
                new ObjectParameter("Movie_Sypnosis", typeof(string));
    
            var movie_titleParameter = movie_title != null ?
                new ObjectParameter("Movie_title", movie_title) :
                new ObjectParameter("Movie_title", typeof(string));
    
            var movie_DateParameter = movie_Date.HasValue ?
                new ObjectParameter("Movie_Date", movie_Date) :
                new ObjectParameter("Movie_Date", typeof(System.DateTime));
    
            var movie_DurationParameter = movie_Duration.HasValue ?
                new ObjectParameter("Movie_Duration", movie_Duration) :
                new ObjectParameter("Movie_Duration", typeof(System.TimeSpan));
    
            var movie_ClassificationParameter = movie_Classification != null ?
                new ObjectParameter("Movie_Classification", movie_Classification) :
                new ObjectParameter("Movie_Classification", typeof(string));
    
            var movie_URLParameter = movie_URL != null ?
                new ObjectParameter("Movie_URL", movie_URL) :
                new ObjectParameter("Movie_URL", typeof(string));
    
            var movieIDParameter = movieID.HasValue ?
                new ObjectParameter("MovieID", movieID) :
                new ObjectParameter("MovieID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Movie_Modified", movie_SypnosisParameter, movie_titleParameter, movie_DateParameter, movie_DurationParameter, movie_ClassificationParameter, movie_URLParameter, movieIDParameter);
        }
    
        public virtual int ProvinceCinema(ObjectParameter provincename)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProvinceCinema", provincename);
        }
    
        public virtual int RegisterCreditCard(Nullable<System.DateTime> expiry_Date, string number, string cVV, string proprietary_Name, Nullable<int> user_ID, Nullable<int> creditCard_Type_ID)
        {
            var expiry_DateParameter = expiry_Date.HasValue ?
                new ObjectParameter("Expiry_Date", expiry_Date) :
                new ObjectParameter("Expiry_Date", typeof(System.DateTime));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var cVVParameter = cVV != null ?
                new ObjectParameter("CVV", cVV) :
                new ObjectParameter("CVV", typeof(string));
    
            var proprietary_NameParameter = proprietary_Name != null ?
                new ObjectParameter("Proprietary_Name", proprietary_Name) :
                new ObjectParameter("Proprietary_Name", typeof(string));
    
            var user_IDParameter = user_ID.HasValue ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(int));
    
            var creditCard_Type_IDParameter = creditCard_Type_ID.HasValue ?
                new ObjectParameter("CreditCard_Type_ID", creditCard_Type_ID) :
                new ObjectParameter("CreditCard_Type_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegisterCreditCard", expiry_DateParameter, numberParameter, cVVParameter, proprietary_NameParameter, user_IDParameter, creditCard_Type_IDParameter);
        }
    
        public virtual int RegisterUser(string username, string password, string confirmpassword, string name, string lastname, Nullable<int> usertype, string email, string confirmemail)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var confirmpasswordParameter = confirmpassword != null ?
                new ObjectParameter("confirmpassword", confirmpassword) :
                new ObjectParameter("confirmpassword", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var usertypeParameter = usertype.HasValue ?
                new ObjectParameter("usertype", usertype) :
                new ObjectParameter("usertype", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var confirmemailParameter = confirmemail != null ?
                new ObjectParameter("confirmemail", confirmemail) :
                new ObjectParameter("confirmemail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegisterUser", usernameParameter, passwordParameter, confirmpasswordParameter, nameParameter, lastnameParameter, usertypeParameter, emailParameter, confirmemailParameter);
        }
    }
}
